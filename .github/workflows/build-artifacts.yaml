name: Cargo Build

on:
  push:
    branches:
      - "testing"

env: 
  CARGO_TERM_COLOR: always

  CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER: aarch64-linux-gnu-gcc
  CC_aarch64_unknown_linux_musl: aarch64-linux-gnu-gcc
  CARGO_TARGET_ARMV7_UNKNOWN_LINUX_MUSLEABIHF_LINKER: arm-linux-gnueabihf-gcc
  CC_armv7_unknown_linux_musleabihf: arm-linux-gnueabihf-gcc

jobs:
  build:
    name: Rust project - latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          # - aarch64-unknown-linux-musl
          # - armv7-unknown-linux-musleabihf
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
      
      - if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends musl-tools
 
      - if: matrix.target == 'armv7-unknown-linux-musleabihf'
        run: |
          sudo apt update
          sudo apt install -y gcc-arm-linux-gnueabihf binutils-arm-linux-gnueabihf musl-tools

      - if: matrix.target == 'aarch64-unknown-linux-musl'
        run: |
          sudo apt update
          sudo apt install -y gcc-12-aarch64-linux-gnu binutils-aarch64-linux-gnu musl-tools
           
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package release
        run: tar czf redlib-${{ matrix.target }}.tar.gz -C target/${{ matrix.target }}/release/ redlib

      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          name: test
          files: |
            redlib-${{ matrix.target }}.tar.gz


